{"version":3,"sources":["data sync nonrecursive //.json$","resources/jefferson-santos-V9sv7QrDUgc-unsplash.jpg","components/NaviView.js","components/HomeView.js","components/ProgrammingView.js","components/MachineLearningView.js","components/DataScienceView.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","NaviView","Navbar","bg","variant","style","marginTop","Brand","as","Link","to","Nav","className","HomeView","Card","width","Body","Title","Text","href","Img","src","require","context","files","ProgrammingView","file","console","log","Container","Row","i","Col","key","xs","md","title","url","Image","imageurl","thumbnail","description","forEach","filename","category","includes","push","MachineLearningView","DataScienceView","Routes","path","exact","component","App","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1bb43c42.chunk.js","sourcesContent":["var map = {\n\t\"./data_mining.json\": 50,\n\t\"./jw_weather.json\": 51,\n\t\"./siamese_network.json\": 52,\n\t\"./tfjsml.json\": 53,\n\t\"./yolo_ot.json\": 54\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","module.exports = __webpack_public_path__ + \"static/media/jefferson-santos-V9sv7QrDUgc-unsplash.b8e8e757.jpg\";","import React from 'react';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\n\nexport default function NaviView() {\n\treturn (\n\t\t<Navbar bg=\"dark\" variant=\"dark\" style={{ marginTop:'1rem' }}>\n    <Navbar.Brand as={Link} to=\"/\" >JWH</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link as={Link} to=\"/\" >Home</Nav.Link>\n      <Nav.Link as={Link} to=\"/programming\" >Programming</Nav.Link>\n      <Nav.Link as={Link} to=\"/machinelearning\">Machine Learning</Nav.Link>\n\t\t\t<Nav.Link as={Link} to=\"/datascience\">Data Science</Nav.Link>\n    </Nav>\n    {/* <Form inline>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n      <Button variant=\"outline-info\">Search</Button>\n    </Form> */}\n  </Navbar>\n\t);\n}\n","import React from 'react';\nimport { Card, Button, Nav } from 'react-bootstrap'\n\nexport default function HomeView() {\n  return (\n    <Card style={{ width: '24rem', marginTop: '1rem' }}>\n      <Card.Body>\n        <Card.Title>What is computer proramming?</Card.Title>\n        <Card.Text>\n          Computer programming is the process of designing and building an executable computer program\n          to accomplish a specific computing result or to perform a specific task.\n    </Card.Text>\n        <Nav.Link href=\"https://en.wikipedia.org/wiki/Computer_programming\">From wikipedia</Nav.Link>\n        {/* <Button variant=\"primary\">Go somewhere</Button> */}\n      </Card.Body>\n      <Card.Img variant=\"top\" src={require('../resources/jefferson-santos-V9sv7QrDUgc-unsplash.jpg')} />\n    </Card>\n  );\n}\n\n","import React from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\n\nvar context = require.context('../data', false, /\\.json$/);\nvar files = [];\ncontext.keys().forEach((filename) => {\n  console.log(filename);\n  const file = context(filename)\n  if(file.category.includes('P')){\n    files.push(context(filename));\n  }\n  \n});\n\nexport default function ProgrammingView() {\n\n  files.map((file) => (console.log(file)))\n\n  return (\n    <Container>\n      <Row>\n        {files.map((file, i) =>\n          <Col key={i} xs={6} md={4}>\n            <p>{file.title}</p>\n            <a href={file.url}>\n            <Image src={file.imageurl} thumbnail />\n            </a>\n            <p>{file.description}</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n\n  );\n}\n\n","import React from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\n\nvar context = require.context('../data', false, /\\.json$/);\nvar files = [];\ncontext.keys().forEach((filename) => {\n  console.log(filename);\n  const file = context(filename)\n  if(file.category.includes('ML')){\n    files.push(context(filename));\n  }\n  \n});\n\nexport default function MachineLearningView() {\n\n  files.map((file) => (console.log(file)))\n\n  return (\n    <Container>\n      <Row>\n        {files.map((file, i) =>\n          <Col key={i} xs={6} md={4}>\n            <p>{file.title}</p>\n            <a href={file.url}>\n            <Image src={file.imageurl} thumbnail />\n            </a>\n            <p>{file.description}</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n\n  );\n}\n\n","import React from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\n\nvar context = require.context('../data', false, /\\.json$/);\nvar files = [];\ncontext.keys().forEach((filename) => {\n  console.log(filename);\n  const file = context(filename)\n  if(file.category.includes('DS')){\n    files.push(context(filename));\n  }\n  \n});\n\nexport default function DataScienceView() {\n\n  files.map((file) => (console.log(file)))\n\n  return (\n    <Container>\n      <Row>\n        {files.map((file, i) =>\n          <Col key={i} xs={6} md={4}>\n            <p>{file.title}</p>\n            <a href={file.url}>\n            <Image src={file.imageurl} thumbnail />\n            </a>\n            <p>{file.description}</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n\n  );\n}\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Row, Col} from 'react-bootstrap';\n\nimport NaviView from './NaviView'\nimport HomeView from \"./HomeView\";\nimport ProgrammingView from \"./ProgrammingView\";\nimport MachineLearningView from \"./MachineLearningView\";\nimport DataScienceView from \"./DataScienceView\";\n\nexport default function Routes() {\n\treturn (\n\t\t<Router>\n\t\t\t<Col>\n\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t<NaviView></NaviView>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t<Route path=\"/\" exact component={HomeView} />\n\t\t\t\t\t<Route path=\"/programming\" exact component={ProgrammingView} />\n\t\t\t\t\t<Route path=\"/machinelearning\" exact component={MachineLearningView} />\n\t\t\t\t\t<Route path=\"/datascience\" exact component={DataScienceView} />\n\t\t\t\t</Row>\n\t\t\t</Col>\n\n\t\t</Router>\n\t)\n} ","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport Routes from './components/Routes'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container fluid>\n        <Routes></Routes>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}